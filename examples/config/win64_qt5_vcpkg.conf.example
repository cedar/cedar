#=======================================================================================================================
#
#   Copyright 2011, 2012, 2013, 2014, 2015, 2016, 2017 Institut fuer Neuroinformatik, Ruhr-Universitaet Bochum, Germany
# 
#   This file is part of cedar.
#
#   cedar is free software: you can redistribute it and/or modify it under
#   the terms of the GNU Lesser General Public License as published by the
#   Free Software Foundation, either version 3 of the License, or (at your
#   option) any later version.
#
#   cedar is distributed in the hope that it will be useful, but WITHOUT ANY
#   WARRANTY; without even the implied warranty of MERCHANTABILITY or
#   FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
#   License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with cedar. If not, see <http://www.gnu.org/licenses/>.
#
#=======================================================================================================================
#
#   Institute:   Ruhr-Universitaet Bochum
#                Institut fuer Neuroinformatik
#
#   File:        cedar.conf
#
#   Maintainer:  Mathis Richter
#   Email:       mathis.richter@ini.rub.de
#   Date:        2010 11 29
#
#   Description: Cedar configuration file. Copy this to cedar.conf and insert the appropriate settings for your system.
#
#   Credits:
#
#=======================================================================================================================

# Configuration file for CMake

# general options
set (CEDAR_LIB_DIR        "${CEDAR_HOME}/lib"         CACHE PATH "Directory all cedar libraries will be stored in.")
set (CEDAR_EXE_DIR        "${CEDAR_HOME}/bin"         CACHE PATH "Directory all cedar executables will be stored in.")
set (CEDAR_LOG_DIR        "${CEDAR_HOME}/logs"        CACHE PATH "Default directory for all log files.")
set (CEDAR_BUILD_STATIC_LIBS              0           CACHE BOOL "Build all libraries statically (*.a)?")
set (CEDAR_PORTABLE                       0           CACHE BOOL "Build a portable cedar version? You may need to run (your OS)deployqt afterwards.")
set (CEDAR_PORTABLE_HOME_DIR              0           CACHE BOOL "Save the userdata (.cedar) relative to the executable for portability.")
set (CEDAR_PORTABLE_MAC_BUNDLE_PATHS      0           CACHE BOOL "Rename directories to resolve mac bundle conflicts? You need to run macdeployqt afterwards manually if you want to build a bundle.")
set (CEDAR_PORTABLE_MINIMAL_VERSION       0           CACHE BOOL "The portable version requires only minimal dependencies.")
set (CEDAR_BUILD_DEBUG_VERSION            0           CACHE BOOL "Build with debug information?")
set (CEDAR_BUILD_USE_OPENCV_DEBUG_LIBS    0           CACHE BOOL "Use opencv debug libraries when building in debug mode?")
#set (CEDAR_STOP_ON_MISSING_LIBRARIES     0           CACHE BOOL "Stop when libraries cannot be found by cmake?")
set (CEDAR_INCLUDE_YARP                   0           CACHE BOOL "Compile cedar with YARP to communicate over Network")
set (CEDAR_INCLUDE_PYTHON                 0           CACHE BOOL "Compile cedar with PYTHON to use the Python Step (in development, linux only currently)")

# extra tests
set (CEDAR_BUILD_TESTS                    0           CACHE BOOL "Build unit and interactive tests? (Disabling this can save compile time.)")
set (CEDAR_COVERAGE_TEST                  0           CACHE BOOL "Execute coverage testing? (Enabling this will force Debug build.)")
set (CEDAR_BUILD_VALGRIND_CHECK           0           CACHE BOOL "Execute valgrind memory check? (Disabling this will save testing time, especially on Debug build.)")

set(Qt5Widgets_DIR "${CEDAR_HOME}/lib/installed/x64-windows/share/cmake/Qt5Widgets")
set(Qt5PrintSupport_DIR "${CEDAR_HOME}/lib/installed/x64-windows/share/cmake/Qt5PrintSupport")
set(Qt5OpenGL_DIR "${CEDAR_HOME}/lib/installed/x64-windows/share/cmake/Qt5OpenGL")
set(Qt5Charts_DIR "${CEDAR_HOME}/lib/installed/x64-windows/share/cmake/Qt5Charts")
set(Qt5DataVisualization_DIR "${CEDAR_HOME}/lib/installed/x64-windows/share/cmake/Qt5DataVisualization")
set(Qt53DCore_DIR "${CEDAR_HOME}/lib/installed/x64-windows/share/cmake/Qt53DCore")
set(Qt53DExtras_DIR "${CEDAR_HOME}/lib/installed/x64-windows/share/cmake/Qt53DExtras")
set(Qt5Xml_DIR "${CEDAR_HOME}/lib/installed/x64-windows/share/cmake/Qt5Xml")
set(Qt5Svg_DIR "${CEDAR_HOME}/lib/installed/x64-windows/share/cmake/Qt5Svg")

set(BOOST_INCLUDEDIR "${CEDAR_HOME}/lib/installed/x64-windows/include/boost")
set(BOOST_LIBRARYDIR "${CEDAR_HOME}/lib/installed/x64-windows/lib")
link_directories(${BOOST_LIBRARYDIR})
set(BOOST_ROOT "${CEDAR_HOME}/lib/installed/x64-windows")
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
set(Boost_DEBUG OFF)

# mandatory dependencies
set (CEDAR_OPENCV_CMAKE_DIR "${CEDAR_LIB_DIR}/installed/x64-windows/share/opencv"     CACHE PATH "Directory where CMake will find the OpenCVConfig.cmake file.")
set (CEDAR_DEPENDENCY_QGLVIEWER "${CEDAR_LIB_DIR}/installed/x64-windows/include/libqglviewer" CACHE PATH "This is the default path in which cedar tries to find QGLViewer.")
set (CEDAR_DEPENDENCY_QT5 "${CEDAR_LIB_DIR}/installed/x64-windows/tools/qt5" CACHE PATH "This is the default path in which cedar tries to find the QT5Library.")
set (CEDAR_DEPENDENCY_GLEW "${CEDAR_LIB_DIR}/installed/x64-windows/include/gl" CACHE PATH "This is the default path in which cedar tries to find the GLEW library.")
set (CEDAR_DEPENDENCY_LIBRARIES "${CEDAR_LIB_DIR}/installed/x64-windows/lib"    CACHE PATH "This is the default path in which cedar tries to find external libraries.")

set(QT_UIC_EXECUTABLE ${CEDAR_DEPENDENCY_QT5}/uic.exe)

# optional dependencies
set (CEDAR_DEPENDENCY_FFTW "${CEDAR_LIB_DIR}/installed/x64-windows/include"                CACHE PATH "This is the default path in which cedar tries to find FFTW.")

# installation
set (CMAKE_INSTALL_PREFIX  "/usr/local")
set (CEDAR_LIB_INSTALL_DIR "lib"                               CACHE PATH "Directory all cedar libraries will be installed to.")
set (CEDAR_HEADER_INSTALL_DIR "include"                        CACHE PATH "A subdirectory called 'cedar' will be created within the given directory, where all cedar headers will be installed to.")
set (CEDAR_DOC_INSTALL_DIR "share/cedar"                       CACHE PATH "Directory where the cedar documentation will be installed to, if generated.")
set (CEDAR_EXE_INSTALL_DIR "bin"                               CACHE PATH "Directory of cedar executables")
