/*!

@page FolderStructureConcept Folder structure

@section build
Technically not part of the cedar directory tree, as it is not shipped with the source code. However, to compile cedar,
the build directory has to be created. All files generated by CMake (e.g., Makefiles, temporary headers) are written to
this directory. 

@section cedar
This folder contains the complete source code of the library. Inside, each module of cedar is contained within its own
subdirectory (e.g., auxiliaries). The only source code that you will find outside of the cedar directory, is in form of
the unit- and interactive tests in "tests". There is also some minor code in "executables". The folders in here follow 
the namespace structure of cedar. You can find an overview of namespaces @link OverviewNamespaces here @endlink.

@section cmake
This directory contains configuration files for the CMake build process. It defines how the makefiles are generated,
how external libraries are found and linked in, how header files and shared objects are installed, how packages (e.g.,
for the Debian distribution) can be generated. It also deals with setting up the unit-test suite ctest.

@section doc
This contains additional documentation of the library, written using the Doxygen tool. In particular, pages are stored
here, which do not describe single classes but more general concepts (similar to this document).

@section examples
Short example code (e.g., code snippets from tutorials) can be found here.

@section executables
This folder contains scripts and source code that, by itself, can be compiled to generate executable code. It does not,
however, include unit tests.

@section license
Contains the complete license of the library for your reading pleasure. cedar is released under the open source licence
LGPL 3.

@section templates
This folder contains file templates for class headers (*.h) and implementation (*.cpp), as well as a template for a
CMakeLists.txt file. If you want to create a new class, start with the template, fill out all the missing information
and then start filling the file with your code.

@section tests
This folder contains unit- and interactive tests. If you want more detailed information, have a look at the page on
@link SoftwareTestingConcept software testing @endlink.

@section tools
This folder contains scripts and tools.

 */